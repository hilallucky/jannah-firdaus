generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt   DateTime @updatedAt
  posts     Post[]
  carts     Cart[]
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)
  title     String   @db.VarChar(255)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
}

enum Role {
  USER
  ADMIN
}

model Article {
  id          Int      @id @default(autoincrement())
  title       String   @unique
  description String?
  body        String
  published   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  price     Int      @default(0)
  quantity  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  carts     Cart[]
}

model PaymentType {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  carts     Cart[]
}

model Cart {
  id        Int          @id @default(autoincrement())
  userId    Int?         
  productId Int?         @default(0)
  quantity  Int          @default(0)
  paymentId Int?         @default(0)
  total     Int          @default(0)
  status    Int          @default(0)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  product   Product?     @relation(fields: [productId], references: [id])
  payment   PaymentType? @relation(fields: [paymentId], references: [id])
  user      User?        @relation(fields: [userId], references: [id])
}